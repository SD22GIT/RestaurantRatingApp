/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    id 'java'
    id 'jacoco'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

group = 'com.example'
version = '1.0'
sourceCompatibility = 11
targetCompatibility = 11

application {
    // Define the main class for the application.
    mainClass = 'com.example.demo.App'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}


jacoco { //Please do not change this
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport { //Please do not change this
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
        xml.destination file("./jacoco.xml")
    }
}

jar {
    archiveBaseName = 'example' //Please do not change this final artifact name
    version =  null              //Please do not change this final artifact version
    manifest {
        attributes 'Main-Class' : 'com.example.demo.App' //Change this to the main class of your program which will be executed
    }
    // To create a single jar with all dependencies.
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

test { ///Please do not change this
    useJUnitPlatform()
    testLogging {
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_ERROR"
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
    afterSuite { desc, result ->
        if (!desc.parent)
            println("${result.resultType} " +
                "(${result.testCount} tests, " +
                "${result.successfulTestCount} successes, " +
                "${result.failedTestCount} failures, " +
                "${result.skippedTestCount} skipped)")
        }
}

//Add your dependencies here
dependencies {
    
    testImplementation 'com.github.stefanbirkner:system-lambda:1.2.1'

    // Use JUnit Jupiter for testing.
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'
}